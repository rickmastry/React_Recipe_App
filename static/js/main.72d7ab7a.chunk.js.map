{"version":3,"sources":["tempList.js","components/Recipe.js","components/RecipeSearch.js","components/RecipeList.js","tempDetails.js","config.js","components/RecipeDetails.js","App.js","serviceWorker.js","index.js"],"names":["recipes","recipe_id","image_url","title","publisher","source_url","Recipe","_this$props$recipe","this","props","recipe","handleDetails","react_default","a","createElement","Fragment","className","src","style","height","alt","type","onClick","href","target","rel","Component","RecipeSearch","_this$props","value","handleSubmit","handleChange","onSubmit","htmlFor","name","placeholder","onChange","RecipeList","error","RecipeSearch_RecipeSearch","map","Recipe_Recipe","key","f2f_url","ingredients","publisher_url","proxy","RecipeDetails","state","id","url","fetch","data","json","jsonData","setState","console","log","_context","t0","_this$state$recipe","handleIndex","item","index","App","concat","base_url","pageIndex","search","query","displayPage","RecipeList_RecipeList","_this","RecipeDetails_RecipeDetails","details_id","e","preventDefault","_this$state","getRecipes","length","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oRAAaA,SAAU,CACrB,CACEC,UAAW,MACXC,UACE,8FACFC,MAAO,0CACPC,UAAW,iBACXC,WACE,qFAEJ,CACEJ,UAAW,MACXC,UACE,8FACFC,MAAO,0CACPC,UAAW,iBACXC,WACE,qFAEJ,CACEJ,UAAW,MACXC,UACE,8FACFC,MAAO,0CACPC,UAAW,iBACXC,WACE,uFCxBeC,mLACV,IAAAC,EAODC,KAAKC,MAAMC,OALXR,EAFCK,EAEDL,UACAC,EAHCI,EAGDJ,MACAE,EAJCE,EAIDF,WACAD,EALCG,EAKDH,UACAH,EANCM,EAMDN,UAECU,EAAiBH,KAAKC,MAAtBE,cACP,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACGH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,yCACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACbJ,EAAAC,EAAAC,cAAA,OAAKG,IAAKf,EAAWc,UAAU,eAAeE,MAAO,CAACC,OAAO,SAAUC,IAAI,WAC3ER,EAAAC,EAAAC,cAAA,OAAKE,UAAU,6BACdJ,EAAAC,EAAAC,cAAA,UAAKX,GACLS,EAAAC,EAAAC,cAAA,MAAIE,UAAU,6BAAd,eACcZ,IAGfQ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACfJ,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASL,UAAU,kCAAkCM,QAAS,kBAAIX,EAAc,EAAGV,KAAhG,WACAW,EAAAC,EAAAC,cAAA,KAAGS,KAAMlB,EAAYW,UAAU,uCAAuCQ,OAAO,SAASC,IAAI,uBAA1F,yBAvBwBC,aCAfC,mLACV,IAAAC,EACuCpB,KAAKC,MAA1CoB,EADFD,EACEC,MAAOC,EADTF,EACSE,aAAcC,EADvBH,EACuBG,aAC9B,OACCnB,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACGH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,4CACfJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gCAAd,yBAAoE,IAAIJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAAlB,cACxEJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,OAAOgB,SAAUF,GACjClB,EAAAC,EAAAC,cAAA,SAAOmB,QAAQ,SAASjB,UAAU,mBAAlC,qCAGAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACfJ,EAAAC,EAAAC,cAAA,SACIO,KAAK,OACLa,KAAK,SACLC,YAAY,yBACZnB,UAAU,eACVa,MAAOA,EACPO,SAAUL,IAEdnB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACfJ,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASL,UAAU,0CAAyCJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iCAvBpDU,aCErBW,mLAEV,IAAAT,EACoEpB,KAAKC,MAAzET,EADA4B,EACA5B,QAASW,EADTiB,EACSjB,cAAekB,EADxBD,EACwBC,MAAOC,EAD/BF,EAC+BE,aAAcC,EAD7CH,EAC6CG,aAAcO,EAD3DV,EAC2DU,MAClE,OACC1B,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACGH,EAAAC,EAAAC,cAACyB,EAAD,CAAcV,MAAOA,EAAOE,aAAcA,EAAcD,aAAcA,IACnElB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAEfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2DACfJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBAAd,iBAICJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACdsB,EACG1B,EAAAC,EAAAC,cAAA,MAAIE,UAAU,2BAA2BsB,GAGrCtC,EAAQwC,IAAI,SAAA9B,GACV,OACEE,EAAAC,EAAAC,cAAC2B,EAAD,CACEC,IAAKhC,EAAOT,UACZS,OAAQA,EACRC,cAAeA,gBAzBDe,aCJ3BhB,EAAS,CACpBiC,QAAS,kCACTzC,UACE,8FACF0C,YAAa,CACX,wDACA,4BACA,wCACA,+CACA,4CACA,yCAEFxC,UAAW,iBACXyC,cAAe,2BACfxC,WACE,oFACFF,MAAO,2CChBI2C,EAAQ,uCACRJ,EAAM,mCCIEK,6MAwBnBC,MAAO,CACHtC,OAAOA,iNAIDuC,EAAKzC,KAAKC,MAAMwC,GAChBC,YAASJ,8CAAyCJ,kBAAWO,qBAE9CE,MAAMD,iBAAnBE,kBACiBA,EAAKC,cAAtBC,SACN9C,KAAK+C,SAAS,SAACP,EAAOvC,GAClB,MAAO,CACHC,OAAQ4C,EAAS5C,SAEtB,gEAEH8C,QAAQC,IAARC,EAAAC,iJAKG,IAAAC,EACiEpD,KAAKwC,MAAMtC,OAA3ER,EADD0D,EACC1D,UAAUE,EADXwD,EACWxD,UAAUyC,EADrBe,EACqBf,cAAcxC,EADnCuD,EACmCvD,WAAWF,EAD9CyD,EAC8CzD,MAAMyC,EADpDgB,EACoDhB,YACnDiB,EAAerD,KAAKC,MAApBoD,YAER,OACCjD,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACGH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gCACfJ,EAAAC,EAAAC,cAAA,UAAQO,KAAK,SAASL,UAAU,uCAAuCM,QAAS,kBAAMuC,EAAY,KAAlG,uBACAjD,EAAAC,EAAAC,cAAA,OAAKG,IAAKf,EAAWc,UAAU,gBAAgBI,IAAI,YAGnDR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BACfJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kBAAkBb,GAChCS,EAAAC,EAAAC,cAAA,MAAIE,UAAU,8CAAd,eAAwEZ,GACxEQ,EAAAC,EAAAC,cAAA,KAAGS,KAAMsB,EAAerB,OAAO,SAASC,IAAI,sBAAsBT,UAAU,wCAA5E,qBACAJ,EAAAC,EAAAC,cAAA,KAAGS,KAAMlB,EAAYmB,OAAO,SAASC,IAAI,sBAAsBT,UAAU,6CAAzE,cACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAd,eAEI4B,EAAYJ,IAAI,SAACsB,EAAKC,GAClB,OACInD,EAAAC,EAAAC,cAAA,MAAI4B,IAAKqB,EAAO/C,UAAU,gCACzB8C,gBApEsBpC,aCkG5BsC,6MA/FbhB,MAAO,CACLhD,QAASA,EACTkD,IAAG,GAAAe,OAAKnB,EAAL,wCAAAmB,OAAiDvB,GACpDwB,SAAQ,GAAAD,OAAKnB,EAAL,wCAAAmB,OAAiDvB,GACzDyB,UAAW,EACXC,OAAQ,GACRC,MAAO,MACP/B,MAAO,MA2BTgC,YAAc,SAACP,GACb,OAAOA,GACL,QACA,KAAK,EACL,OAASnD,EAAAC,EAAAC,cAACyD,EAAD,CACPvE,QAASwE,EAAKxB,MAAMhD,QACpBW,cAAe6D,EAAK7D,cACpBkB,MAAO2C,EAAKxB,MAAMoB,OAClBrC,aAAcyC,EAAKzC,aACnBD,aAAc0C,EAAK1C,aACnBQ,MAAOkC,EAAKxB,MAAMV,QAEpB,KAAK,EACL,OAAS1B,EAAAC,EAAAC,cAAC2D,EAAD,CAAexB,GAAIuB,EAAKxB,MAAM0B,WAAYb,YAAaW,EAAKX,kBAIzEA,YAAc,SAAAE,GACZS,EAAKjB,SAAS,CACZY,UAAWJ,OAIfpD,cAAgB,SAACoD,EAAOd,GACtBuB,EAAKjB,SAAS,CACZY,UAAWJ,EACXW,WAAYzB,OAIhBlB,aAAe,SAAC4C,GACdH,EAAKjB,SAAS,CACZa,OAAOO,EAAEnD,OAAOK,OAChB,WACA2B,QAAQC,IAAIe,EAAKxB,MAAMoB,aAI3BtC,aAAe,SAAC6C,GACdA,EAAEC,iBADkB,IAAAC,EAEWL,EAAKxB,MAA9BkB,EAFcW,EAEdX,SAASG,EAFKQ,EAELR,MAAMD,EAFDS,EAECT,OACrBI,EAAKjB,SAAS,WACZ,MAAM,CAACL,IAAG,GAAAe,OAAIC,GAAJD,OAAeI,GAAfJ,OAAuBG,GAASA,OAAO,KACjD,WACAI,EAAKM,qOAlEc3B,MAAM3C,KAAKwC,MAAME,mBAA9BE,kBACiBA,EAAKC,cACG,KADzBC,UACMtD,QAAQ+E,OAClBvE,KAAK+C,SAAS,WACZ,MAAO,CAACjB,MAAM,uDAGhB9B,KAAK+C,SAAS,WACZ,MAAO,CAACvD,QAAQsD,EAAStD,6DAK7BwD,QAAQC,IAARC,EAAAC,4JAMFnD,KAAKsE,8CAqDL,OACElE,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEP,KAAK8D,YAAY9D,KAAKwC,MAAMmB,mBAvFlBzC,aCKEsD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1E,EAAAC,EAAAC,cAACyE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.72d7ab7a.chunk.js","sourcesContent":["export const recipes = [\n  {\n    recipe_id: 35382,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  },\n  {\n    recipe_id: 35383,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  },\n  {\n    recipe_id: 35384,\n    image_url:\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\n    publisher: \"Closet Cooking\",\n    source_url:\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\n  }\n];\n","import React, { Component } from 'react'\r\n\r\nexport default class Recipe extends Component {\r\n  render() {\r\n      const{\r\n          image_url,\r\n          title,\r\n          source_url,\r\n          publisher,\r\n          recipe_id\r\n      } = this.props.recipe;\r\n    const {handleDetails} = this.props;\r\n    return (\r\n      <React.Fragment>\r\n         <div className=\"col-10 mx-auto col-md-6 col-lg-4 my-3\">\r\n          <div className=\"card\">\r\n            <img src={image_url} className=\"img-card-top\" style={{height:\"14rem\"}} alt=\"recipe\"/>\r\n            <div className=\"card-body text-capitalize\">\r\n             <h6>{title}</h6>\r\n             <h6 className=\"text-warning text-slanted\">\r\n              provided by {publisher}\r\n             </h6>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n            <button type=\"buttom\" className=\"btn btn-primary text-capitalize\" onClick={()=>handleDetails(0, recipe_id)}>details</button>\r\n            <a href={source_url} className=\"btn btn-success mx-2 text-capitalize\" target=\"_blank\" rel=\"noopener noreferrer\">recipe url</a>\r\n            </div>\r\n          </div>\r\n         </div>\r\n\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class RecipeSearch extends Component {\r\n  render() {\r\n      const {value, handleSubmit, handleChange} = this.props\r\n    return (\r\n     <React.Fragment>\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n        <div className=\"col-10 mx-auto col-md-8 my-5 text-center\">\r\n        <h1 className=\"text-slanted text-capitalize\">search for recipe with{\" \"}<strong className=\"text-danger\">Food2Fork</strong></h1>\r\n        <form className=\"mt-4\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"search\" className=\"text-capitalize\">\r\n           type recipes seperated by a comma\r\n        </label>\r\n        <div className=\"input-group\">\r\n        <input \r\n            type=\"text\" \r\n            name=\"search\" \r\n            placeholder=\"search recipes here...\" \r\n            className=\"form-control\" \r\n            value={value} \r\n            onChange={handleChange}\r\n        />\r\n        <div className=\"input-group-append\">\r\n        <button type=\"submit\" className=\"input-group-text bg-primary text-white\"><i className=\"fas fa-search\"></i>\r\n        </button>\r\n        </div>\r\n        \r\n        </div>\r\n        \r\n        </form>\r\n        \r\n        </div>\r\n        \r\n        </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport Recipe from './Recipe';\r\nimport RecipeSearch from './RecipeSearch';\r\n\r\nexport default class RecipeList extends Component {\r\n   \r\n  render() {\r\n    const {recipes, handleDetails, value, handleSubmit, handleChange, error} = this.props;\r\n    return (\r\n     <React.Fragment> \r\n        <RecipeSearch value={value} handleChange={handleChange} handleSubmit={handleSubmit}/>\r\n           <div className=\"container my-5\">\r\n           {/*title*/}\r\n           <div className=\"row\">\r\n           <div className=\"col-10 mx-auto col-md-6 text-center text-uppercase mb-3\">\r\n           <h1 className=\"text-slanted\">Recipe List</h1>\r\n           </div>\r\n           </div>\r\n            {/*end of title*/}\r\n            <div className=\"row\">\r\n            {error ? (\r\n                <h1 className=\"text-danger text-center\">{error}\r\n                </h1> \r\n                ): (\r\n                    recipes.map(recipe =>{\r\n                      return(\r\n                        <Recipe\r\n                          key={recipe.recipe_id}\r\n                          recipe={recipe} \r\n                          handleDetails={handleDetails}\r\n                        />\r\n                      )\r\n                  }) \r\n                \r\n            )}\r\n              \r\n              \r\n            </div>\r\n           </div>\r\n        \r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","export const recipe = {\n  f2f_url: \"http://food2fork.com/view/35382\",\n  image_url:\n    \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\n  ingredients: [\n    \"2 jalapeno peppers, cut in half lengthwise and seeded\",\n    \"2 slices sour dough bread\",\n    \"1 tablespoon butter, room temperature\",\n    \"2 tablespoons cream cheese, room temperature\",\n    \"1/2 cup jack and cheddar cheese, shredded\",\n    \"1 tablespoon tortilla chips, crumbled\"\n  ],\n  publisher: \"Closet Cooking\",\n  publisher_url: \"http://closetcooking.com\",\n  source_url:\n    \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\n  title: \"Jalapeno Popper Grilled Cheese Sandwich\"\n};\n","export const proxy = 'https://cors-anywhere.herokuapp.com/';\r\nexport const key = '03cbff2c53d90523683ebf31581953d6';\r\n\r\n//03cbff2c53d90523683ebf31581953d6;\r\n//cc066a48599ff5cd3c3c06699f0cf0c3","import React, { Component } from 'react';\r\nimport {recipe} from \"../tempDetails\";\r\nimport {key, proxy} from '../config';\r\n\r\n\r\nexport default class RecipeDetails extends Component {\r\n   /* constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            recipe: recipe,\r\n            url: `${proxy}http://food2fork.com/api/get?key=${key}&rId=${this.props.id}`\r\n        }\r\n    }\r\n   \r\n\r\n  async componentDidMount(){\r\n       try{\r\n      const data = await fetch(this.state.url);\r\n      const jsonData = await data.json();\r\n      this.setState({\r\n        recipe:jsonData.recipe\r\n      })\r\n    } catch(error){\r\n      console.log(error);\r\n    }\r\n}\r\n    */\r\n \r\n  state= {\r\n      recipe:recipe\r\n  }\r\n\r\n  async componentDidMount(){\r\n      const id = this.props.id;\r\n      const url = `${proxy}http://food2fork.com/api/get?key=${key}&rId=${id}`;\r\n      try{\r\n        const data = await fetch(url);\r\n        const jsonData = await data.json();\r\n        this.setState((state, props) => {\r\n            return {\r\n                recipe: jsonData.recipe\r\n            }\r\n        }, ()=>{});\r\n      } catch(error){\r\n        console.log(error);\r\n      }\r\n  }\r\n    \r\n  \r\n  render() {\r\n      const{image_url,publisher,publisher_url,source_url,title,ingredients}=this.state.recipe;\r\n      const{handleIndex} = this.props\r\n\r\n    return (\r\n     <React.Fragment>\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n        <div className=\"col-10 mx-auto col-md-6 my-3\">\r\n        <button type=\"button\" className=\"btn btn-warning mb-5 text-capitalize\" onClick={() => handleIndex(1)}>back to recipe list</button>\r\n        <img src={image_url} className=\"d-block w-100\" alt=\"recipe\"/>\r\n        </div>\r\n        {/*details section*/}\r\n        <div className=\"col-10 mx-auto col-md my-3\">\r\n        <h6 className=\"text-uppercase\">{title}</h6>\r\n        <h6 className=\"text-warning text-caplitalize text-slanted\">provided by {publisher}</h6>\r\n        <a href={publisher_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-primary mt-2 text-capitalize\">publisher webpage</a>\r\n        <a href={source_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-success mt-2 mx-3 text-capitalize\">recipe url</a>\r\n        <h2 className=\"mt-3 mb-4\">Ingredients</h2>\r\n        {\r\n            ingredients.map((item,index) => {\r\n                return(\r\n                    <li key={index} className=\"List-group-item text-slanted\">\r\n                    {item}\r\n                    </li>\r\n                )\r\n            })\r\n        }\r\n\r\n        </div>\r\n        \r\n        </div>\r\n        </div>\r\n     </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\nimport \"./App.css\";\nimport {recipes} from './tempList';\nimport RecipeList from './components/RecipeList';\nimport RecipeDetails from './components/RecipeDetails';\nimport {key, proxy} from './config';\n\nclass App extends Component {\n  state ={\n    recipes: recipes,\n    url: `${proxy}http://food2fork.com/api/search?key=${key}`,\n    base_url: `${proxy}http://food2fork.com/api/search?key=${key}`,\n    pageIndex: 1,\n    search: '',\n    query: '&q=',\n    error: ''\n  };\n\n  async getRecipes(){\n    try{\n      const data = await fetch(this.state.url);\n      const jsonData = await data.json();\n      if(jsonData.recipes.length === 0){\n        this.setState(()=>{\n          return {error:'sorry, but your search did not return any results'}\n        })\n      }else{\n        this.setState(()=>{\n          return {recipes:jsonData.recipes}\n        })\n      }\n\n    } catch(error){\n      console.log(error);\n    }\n \n  }\n\n  componentDidMount(){\n    this.getRecipes();\n  }\n\n  displayPage = (index) => {\n    switch(index) {\n      default:\n      case 1:\n      return(  <RecipeList  \n        recipes={this.state.recipes} \n        handleDetails={this.handleDetails} \n        value={this.state.search}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n        error={this.state.error}\n        />)\n      case 0: \n      return ( <RecipeDetails id={this.state.details_id} handleIndex={this.handleIndex}/>)\n    }\n  }\n\n  handleIndex = index => {\n    this.setState({\n      pageIndex: index\n    })\n  }\n\n  handleDetails = (index, id) => {\n    this.setState({\n      pageIndex: index,\n      details_id: id\n    })\n  };\n\n  handleChange = (e)=> {\n    this.setState({\n      search:e.target.value\n    },()=> {\n      console.log(this.state.search)\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const{base_url,query,search} = this.state;\n    this.setState(()=>{\n      return{url:`${base_url}${query}${search}`,search:\"\"}\n    },()=>{\n      this.getRecipes();\n    })\n  };\n\n  render(){\n   // console.log(this.state.recipes)\n    return (\n      <React.Fragment>\n       {this.displayPage(this.state.pageIndex)}\n       \n    </React.Fragment>\n    );\n   \n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}